#-*- coding:utf-8 -*-
import re
import sys
from datetime import datetime
import math

import requests

def sec2hms(sec):  # 时间转换
    hms = str(int(sec//3600)).zfill(2)+':' + str(int((sec % 3600)//60)).zfill(2)+':'+str(round(sec % 60, 2))
    return hms

def openrecComment2ass(url_or_id):
    id = re.findall(r"\w+$",url_or_id)[0]
    detail_url = f'https://public.openrec.tv/external/api/v5/movies/{id}'
    #获取开始时间和节目标题
    res_js = requests.get(detail_url).json()

    started_at = res_js['started_at']
    from_created_at = res_js['started_at']
    title = res_js['title']

    #获取弹幕
    chats = []
    res = []
    chat_url = f'https://public.openrec.tv/external/api/v5/movies/{id}/chats'
    LIMIT = 300
    while True:
        params = {
    	    'from_created_at': from_created_at,
    	    'limit': LIMIT
        }
        res = requests.get(chat_url, params=params).json()
        chats += res
        from_created_at = chats[-1]['messaged_at']
        if len(res) < LIMIT:
            break

    # 弹幕信息去重
    dt_fmt = '%Y-%m-%dT%H:%M:%S%z' # 2024-03-26T19:55:02+09:00
    started_at_dt = datetime.strptime(started_at, dt_fmt)
    # remove duplicates by unique "id" 
    print(f'Find {len(chats)} chats.')
    chats = list({chat['id']:chat for chat in chats  if chat['message']}.values())
    print(f'After removing duplicates and empty chat, {len(chats)} chats left.')

    #转换弹幕
    limitLineAmount = 12  # 屏上弹幕行数限制
    danmakuPassageway = []  # 塞弹幕用，记录每行上一条弹幕的消失时间
    for i in range(limitLineAmount):
        danmakuPassageway.append(0)
    fontName = 'Source Han Sans JP'  # 字体自己换
    videoWidth = 1280  # 视频宽度，按720P处理了后面的内容，不建议改
    videoHeight = 720  # 视频高度
    OfficeSize = 36
    fontSize = 58
    OfficeBgHeight = 72  # 运营弹幕背景遮盖高度
    officeBg = f'm 0 0 l {videoWidth} 0 l {videoWidth} {OfficeBgHeight} l 0 {OfficeBgHeight}'  # 运营弹幕遮盖
    ass_head = f'''[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
ScriptType: v4.00+
PlayResX: {videoWidth}
PlayResY: {videoHeight}

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,微软雅黑,54,&H00FFFFFF,&H00FFFFFF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,0,2,0,0,0,0
Style: Alternate,微软雅黑,36,&H00FFFFFF,&H00FFFFFF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,0,2,0,0,0,0
Style: Office,{fontName},{OfficeSize},&H00FFFFFF,&H00FFFFFF,&H00000000,&H00000000,-1,0,0,0,100,100,2,0,1,1.5,0,2,0,0,10,0
Style: Danmaku,{fontName},{fontSize},&H00FFFFFF,&H00FFFFFF,&H00000000,&H00000000,-1,0,0,0,100,100,2,0,1,1.5,0,2,0,0,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Comment: 0,00:00:00.0,00:00:00.0,Danmaku,标题,0,0,0,,{title}
'''
    ass = open(f'{id}.ass','w',encoding='utf-8-sig')
    ass.write(ass_head)
    # 写入弹幕
    for chat in chats:
        posted_at_dt = datetime.strptime(chat['posted_at'], dt_fmt)
        vpos = (posted_at_dt - started_at_dt).total_seconds()
        vpos_end = vpos + 8
        nickname = chat['user']['nickname']
        message = chat['message']
        #vpos = float(vpos)
        #vpos_end = float(vpos_end)
        if chat['user']['is_official']:
            eventBg = f'Dialogue: 4,{sec2hms(vpos)},{sec2hms(vpos_end)},Office,,0,0,0,,{{\\an5\\p1\\pos({videoWidth/2},{math.floor(OfficeBgHeight/2)})\\bord0\\1c&H000000&\\1a&H78&}}{officeBg}\n'
            eventDm = f'Dialogue: 5,{sec2hms(vpos)},{sec2hms(vpos_end)},Office,{nickname},0,0,0,,{{\\an5\\pos({videoWidth/2},{math.floor(OfficeBgHeight/2)})\\bord0\\fsp0}}{message}\n'
            ass.write(eventBg)
            ass.write(eventDm)
            continue
        vpos_next_min = float('inf')
        vpos_next = vpos+1280/(len(chat)*60+1280) * 8
        for i in range(limitLineAmount):
            if vpos_next >= danmakuPassageway[i]:
                passageway_index = i
                danmakuPassageway[i] = vpos+8
                break
            elif danmakuPassageway[i] < vpos_next_min:
                vpos_next_min = danmakuPassageway[i]
                Passageway_min = i
            if i == limitLineAmount-1 and vpos_next < vpos_next_min:
                passageway_index = Passageway_min
                danmakuPassageway[Passageway_min] = vpos+8
        # 计算弹幕位置
        sx = videoWidth
        sy = fontSize*(passageway_index)
        ex = 0
        for i in message:
            if re.search("[A-Za-z 0-9',.]", i):
                ex = ex-30
            else:
                ex = ex-60
        ey = fontSize*(passageway_index)
        ass.write(f'Dialogue: 0,{sec2hms(vpos)},{sec2hms(vpos_end)},Danmaku,{nickname},0,0,0,,{{\\an7\\move({str(sx)},{str(sy)},{str(ex)},{str(ey)})}}{message}\n')
    # 完成后输出信息
    print(f'{title}的弹幕共{len(chats)}条，已输出至{id}.ass')


if __name__ == '__main__':
    if len(sys.argv) > 1:
        for i in range(1, len(sys.argv)):
            openrecComment2ass(sys.argv[i])
